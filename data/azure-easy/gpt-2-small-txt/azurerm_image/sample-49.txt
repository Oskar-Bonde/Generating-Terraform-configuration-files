terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
    }
  }
}

# Provider block with azure provider
provider "azurerm" {
  features {}
}

# create resource group
resource "azurerm_resource_group" "rg" {
  name     = "myTFResourceGroup"
  location = "westus2"
}

# resource block. Create azurerm image
resource "azurerm_virtual_machine" "vm" {
  name                        = "myVM"
  location                    = "West US"
  resource_group_name         = azurerm_resource_group.rg.name
  network_interface_ids        = [azurerm_network_interface.nic.id]
  vm_size                      = "Standard_A0"
  delete_os_disk_on_termination = true

  storage_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "16.04-LTS"
    version   = "latest"
  }

  storage_os_disk {
    name                       = "myOSDisk"
    caching                   = "ReadWrite"
    create_option              = "FromImage"
    managed_disk_type          = "Standard_LRS"
    create_option              = "Attach"
    lun                       = "0"
    disk_size_gb               = "10"
  }

  os_profile {
    computer_name  = "myVM"
    admin_username = "core"
    admin_password = "BEstrO0ng_#11"
  }

  os_profile_linux_config {
    disable_password_authentication = true

    ssh_keys {
      path     = "/home/core/.ssh/authorized_keys"
      key_data = "${file(var.public_ssh_key)}"
    }
  }

  tags {
    environment = "staging"
  }
}

