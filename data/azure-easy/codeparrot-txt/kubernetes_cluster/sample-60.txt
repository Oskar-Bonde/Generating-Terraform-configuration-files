terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
    }
  }
}

# Provider block with azurerm resource group
resource "azurerm_resource_group" "rg" {
  name     = "myTFRG"
  location = "westus2"
}

# create resource group
resource "azurerm_resource_group" "rg" {
  name     = "myTFRG"
  location = "westus2"
}

# kubernetes cluster resource group
resource "azurerm_kubernetes_cluster" "cluster" {
  name                = "myTFCluster"
  location            = "westus2"
  resource_group_name = azurerm_resource_group.rg.name
  kubernetes_version = "1.21.7-gke.3"
  kubernetes_master_type = "n1-standard-1"
  kubernetes_node_type  = "n1-standard-2"
  kubernetes_node_minimum = "1.5"
  kubernetes_node_maximum = "5"
  kubernetes_node_public_key = file("../secrets/kubernetes.pub")
  kubernetes_node_resource_group_name = azurerm_resource_group.rg.name
  kubernetes_node_dns_name_label = "myTFClusterDNS"
  kubernetes_node_dns_name = "myTFClusterDNS"
  kubernetes_node_disk_size_gb = "50"
  kubernetes_node_disk_type = "pd-standard"
  kubernetes_node_disk_size_gb_in_gb = "100"
  kubernetes_node_disk_type = "pd-ssd"
  kubernetes_node_disk_size_gb_out_gb = "50"
  kubernetes_node_disk_type_in_gb = "pd-standard"
  kubernetes_node_disk_type_in_gb_out_gb = "pd-ssd"
  kubernetes_node_disk_type_master = "pd-standard"
  kubernetes_node_labels = {
    "k8s-io-cluster-name" = "k8s-io-cluster"
    "k8s-io-etcd-name" = "k8s-io-etcd"
    "k8s-io-role-master" = "k8s-io-role"
    "k8s-io-role-node" = "k8s-io-role"
    "k8s-io-role-etcd" = "k8s-io-role"
    "k8s-io-role-node" = "k8s-io-role"
    "k8s-io-role-master" = "k8s-io-role"
  }
}

