# Terraform Block
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
    }
  }
}

# Provider Block
provider "aws" {
  profile = "default"
  region  = "us-east-1"
}

# Input Variables
variable "name" {
  default = "terraform-test"
}

# Create Security Group - SSH Traffic
resource "aws_security_group" "ssh_http" {
  name        = "${var.name}"
  description = "Allow SSH and HTTP access"
  vpc_id      = "${aws_vpc.main.id}"

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Create Security Group - Web Traffic
resource "aws_security_group" "web" {
  name        = "${var.name}"
  description = "Allow SSH and HTTP access"
  vpc_id      = "${aws_vpc.main.id}"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Create EC2 Instance - Amazon Linux
resource "aws_instance" "web" {
  ami           = "ami-0ff8a91507f77f867"
  instance_type = "t2.micro"
  security_groups = ["${aws_security_group.web.name}"]
  subnet_id = "${aws_subnet.main.id}"
}

# Define Output Values
output "web_ip" {
  value = "${aws_instance.web.public_ip}"
}

# Attribute Reference
# https://www.terraform.io/docs/configuration/outputs.html

# Terraform configuration file
# Terraform Block
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
    }
  }
}

# Attribute Reference - Create Public DNS URL
output "public_dns" {
  value = "${aws_instance.web.public_dns}"
}

# Get latest AMI ID for Amazon Linux2 OS
# https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html
# https://www.terraform.io/docs/providers/aws/d/ami.html

# Terraform configuration file
# Terraform Block
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
    }
  }
}

