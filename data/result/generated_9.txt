# Terraform Block with AWS provider
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
    }
  }
}

# Provider Block AWS in region var.aws_region
provider "aws" {
  region = var.aws_region
}

# Create variable called aws_region with default "us-east-1"
variable "aws_region" {
  default = "us-east-1"
}

# variable called ec2_ami_id with default ami-0915bcb5fa77e4892
variable "ec2_ami_id" {
  default = "ami-0915bcb5fa77e4892"
}

# create number variable called ec2_instance_count with default 1
variable "ec2_instance_count" {
  default = 1
}

# creaet variable ec2_instance_type with default t3.micro
variable "ec2_instance_type" {
  default = "t3.micro"
}

# Create Security Group for SSH Traffic, allow port 22 ingress and all IP and ports egress
resource "aws_security_group" "ssh_from_world" {
  name        = "allow_ssh_from_anywhere"
  description = "Allow SSH from anywhere"
  vpc_id      = var.vpc_id

  ingress {
    from_port       = 22
    to_port         = 22
    protocol        = "tcp"
    cidr_blocks     = ["0.0.0.0/0"]
  }

  egress {
    from_port       = 0
    to_port         = 0
    protocol        = "-1"
    cidr_blocks     = ["0.0.0.0/0"]
  }
}

# Create Security Group for web traffic
resource "aws_security_group" "web_from_world" {
  name        = "allow_web_from_anywhere"
  description = "Allow web from anywhere"
  vpc_id      = var.vpc_id

  ingress {
    from_port       = 80
    to_port         = 80
    protocol        = "tcp"
    cidr_blocks     = ["0.0.0.0/0"]
  }

  egress {
    from_port       = 0
    to_port         = 0
    protocol        = "-1"
    cidr_blocks     = ["0.0.0.0/0"]
  }
}

# Create EC2 Instance with ami var.ec2_ami_id, instance type set to var.ec2_instance_type, count to var.ec2_instance_count
resource "aws_instance" "web" {
  ami           = var.ec2_ami_id
  instance_type = var.ec2_instance_type
  count         = var.ec2_instance_count

  # Associate Security Group with SSH and web
  security_groups = [
    aws_security_group.ssh_from_world.name,
    aws_security_group.web_from_world.name,
  ]

  # Associate with Subnet
  subnet_id = aws_subnet.public_subnet.id
}

