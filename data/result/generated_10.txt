# Terraform Block with AWS
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
    }
  }
}

# Provider Block AWS in region var.aws_region
provider "aws" {
  region = var.aws_region
}

# Variable called aws_region with default us east 1
variable "aws_region" {
  default = "us-east-1"
}

# variable called ec2_ami_id and default ami-0915bcb5fa77e4892
variable "ec2_ami_id" {
  default = "ami-0915bcb5fa77e4892"
}

# make variable ec2_instance_count with default 1
variable "ec2_instance_count" {
  default = 1
}

# make variable ec2_instance_type which is a string
variable "ec2_instance_type" {
  type    = "string"
}

# Create Security Group for SSH Traffic
resource "aws_security_group" "ssh_from_world" {
  name        = "ssh_from_world"
  description = "Allow SSH from anywhere"
  vpc_id      = var.vpc_id

  ingress {
    from_port       = 22
    to_port         = 22
    protocol        = "tcp"
    cidr_blocks     = ["0.0.0.0/0"]
  }
}

# Create Security Group for Web Traffic
resource "aws_security_group" "web_from_world" {
  name        = "web_from_world"
  description = "Allow HTTP from anywhere"
  vpc_id      = var.vpc_id

  ingress {
    from_port       = 80
    to_port         = 80
    protocol        = "tcp"
    cidr_blocks     = ["0.0.0.0/0"]
  }
}

# Create EC2 Instance with ami set to var.ec2_ami_id, instance type as var.ec2_instance_type and count to var.ec2_instance_count. Use vpc security group ids
resource "aws_instance" "web" {
  ami           = var.ec2_ami_id
  instance_type = var.ec2_instance_type
  count         = var.ec2_instance_count

  vpc_security_group_ids = [aws_security_group.web_from_world.id]
}

