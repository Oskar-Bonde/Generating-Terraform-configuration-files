# Terraform block with aws provider
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
    }
  }
}

# AWS provider block in region var.aws_region
provider "aws" {
  profile = "default"
  region  = var.aws_region
}

# Variable called aws_region with default us east 1
variable "aws_region" {
  default = "us-east-1"
}

# variable called ec2_ami_id and default ami-0915bcb5fa77e4892
variable "ec2_ami_id" {
  default = "ami-0915bcb5fa77e4892"
}

# variable called ec2 instance count with default set to 2
variable "ec2_instance_count" {
  default = 2
}

# variable ec2_instance_type with default t3.micro
variable "ec2_instance_type" {
  default = "t3.micro"
}

# Create a aws Security Group that allows port 22 incoming and all outbound traffic 
resource "aws_security_group" "allow_ssh" {
  name        = "allow_ssh"
  description = "Allow SSH access"
  vpc_id      = var.vpc_id

  ingress {
    from_port       = 22
    to_port         = 22
    protocol        = "tcp"
    cidr_blocks     = [var.cidr_block]
  }

  egress {
    from_port       = 0
    to_port         = 0
    protocol        = "-1"
    cidr_blocks     = ["0.0.0.0/0"]
  }
}

# Create Security Group for Web Traffic. Allow traffic entering through port 80 and 443 and all outbound traffic
resource "aws_security_group" "web" {
  name        = "web"
  description = "Allow HTTP and HTTPS traffic"
  vpc_id      = var.vpc_id

  ingress {
    from_port       = 80
    to_port         = 80
    protocol        = "tcp"
    cidr_blocks     = [var.cidr_block]
  }

  ingress {
    from_port       = 443
    to_port         = 443
    protocol        = "tcp"
    cidr_blocks     = [var.cidr_block]
  }

  egress {
    from_port       = 0
    to_port         = 0
    protocol        = "-1"
    cidr_blocks     = ["0.0.0.0/0"]
  }
}

# Create EC2 Instance with previously defined variables and security groups
resource "aws_instance" "web" {
  ami           = var.ec2_ami_id
  instance_type = var.ec2_instance_type
  count         = var.ec2_instance_count

  security_groups = [
    aws_security_group.allow_ssh.name,
    aws_security_group.web.name,
  ]

  depends_on = [aws_internet_gateway.gw]
}

