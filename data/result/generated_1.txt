# Terraform block with the AWS provider and Backend as S3 for Remote State Storage with State Locking in us-east-1
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
    }
  }
  backend "s3" {
    bucket = "terraform-state-a3bbe1"
    key    = "terraform.tfstate"
    region = "us-east-1"
  }
}

# Provider block with AWS in us-east-1
provider "aws" {
  region = "us-east-1"
}

# Resource block with an EC2 instance called ec2demo with the var.instance_type instance type and ami-0ff8a91507f77f867
resource "aws_instance" "ec2demo" {
  ami           = "ami-0ff8a91507f77f867"
  instance_type = var.instance_type
}

# Variable block called instance_type of type string and default t2.micro
variable "instance_type" {
  default = "t2.micro"
}

# Output block called ec2_instance_publicip with the public ip of my AWS instance
output "ec2_instance_publicip" {
  value = aws_instance.ec2demo.public_ip
}

# Locals block that creates a S3 bucket with input variables and local values
locals {
  bucket_name = "terraform-state-a3bbe1"
  region      = "us-east-1"
}

# Data block that has latest AMI ID for Amazon Linux2 OS
data "aws_ami" "amazon_linux2" {
  most_recent = true
  owners      = ["amazon"]
  filter {
    name   = "name"
    values = ["amzn2-ami-hvm-2.0.*-x86_64-gp2"]
  }
}

# Module block off an AWS EC2 Instance that has default VPC security group ID and public subnet id from default vpc
module "ec2_instance" {
  source = "./modules/ec2_instance"
  vpc_security_group_ids = [aws_security_group.default.id]
  subnet_id = aws_subnet.public.id
}

