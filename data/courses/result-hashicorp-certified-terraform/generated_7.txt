# Terraform Block with the AWS provider
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
    }
  }
}

# Provider AWS in region var.aws_region
provider "aws" {
  region = var.aws_region
}

# Create variable called aws_region with default "us-east-1"
variable "aws_region" {
  default = "us-east-1"
}

# Create variable called ec2_ami_id with default ami-0915bcb5fa77e4892
variable "ec2_ami_id" {
  default = "ami-0915bcb5fa77e4892"
}

# variable called ec2_instance_count which is number type with default 1
variable "ec2_instance_count" {
  default = 1
}

# Create Security Group that allows port 22 and all outbound IP and ports
resource "aws_security_group" "sg" {
  name        = "allow_all_outbound"
  description = "Allow all outbound traffic"
  vpc_id      = var.vpc_id

  ingress {
    from_port       = 0
    to_port         = 0
    protocol        = "-1"
    cidr_blocks     = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  egress {
    from_port       = 0
    to_port         = 0
    protocol        = "-1"
    cidr_blocks     = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }
}

# Create Security Group that allows port 80, 443 and all IP and Ports outbound
resource "aws_security_group" "web" {
  name        = "allow_all_outbound"
  description = "Allow all outbound traffic"
  vpc_id      = var.vpc_id

  ingress {
    from_port       = 0
    to_port         = 0
    protocol        = "-1"
    cidr_blocks     = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  egress {
    from_port       = 0
    to_port         = 0
    protocol        = "-1"
    cidr_blocks     = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }
}

# Create EC2 Instance with ami set to var.ec2_ami_id, count as var.ec2_instance_count and instance type t3.micro
resource "aws_instance" "web" {
  ami           = var.ec2_ami_id
  instance_type = "t3.micro"
  count         = var.ec2_instance_count

  # Associate the instance with the security group
  security_groups = [aws_security_group.sg.name]
}

