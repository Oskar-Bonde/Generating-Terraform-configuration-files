# Terraform Block with AWS. Create backend as S3 for remote state storage
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
    }
  }
  backend "s3" {
    bucket = "terraform-state-a3c731f"
    key    = "terraform.tfstate"
    region = "us-east-1"
  }
}

# Provider AWS Block
provider "aws" {
  profile = "default"
  region  = "us-east-1"
}

# Create AWS instance with the ami data.aws_ami.amzlinux.id 
# and the instance type t2.micro
resource "aws_instance" "web" {
  ami           = data.aws_ami.amzlinux.id
  instance_type = "t2.micro"
  tags {
    Name = "HelloWorld"
  }
}

# Data block, Get latest AMI ID for Amazon Linux2 OS. Filter for the name amzn2-ami-hvm-*-gp2, root-device-type value ebs, virtualization-type set to hvm, and architecture x86_64
data "aws_ami" "amzlinux" {
  most_recent = true
  owners      = ["amazon"]
  filter {
    name   = "name"
    values = ["amzn2-ami-hvm-*-gp2"]
  }
  filter {
    name   = "root-device-type"
    values = ["ebs"]
  }
  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }
  filter {
    name   = "architecture"
    values = ["x86_64"]
  }
}

