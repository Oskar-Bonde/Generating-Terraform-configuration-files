terraform {
  required_providers {
    google = {
      source = "hashicorp/google"
    }
  }
}

# google provider block
provider "google" {
  credentials = file("${path.module}/account.json")
  project     = var.project
  region      = var.region
}

# create a node template
resource "google_compute_instance_template" "node" {
  name         = "node-template"
  machine_type = "n1-standard-1"
  can_ip_forward = true

  tags = [
    "kubernetes",
    "kubernetes-the-hard-way",
  ]

  network_interface {
    network = "default"

    access_config {
      // Ephemeral IP
    }
  }

  metadata_startup_script = file("${path.module}/startup-script.sh")

  disk {
    source_image = "debian-cloud/debian-9"
    auto_delete  = true
    boot         = true
  }

  service_account {
    scopes = [
      "https://www.googleapis.com/auth/compute",
      "https://www.googleapis.com/auth/devstorage.read_only",
      "https://www.googleapis.com/auth/logging.write",
      "https://www.googleapis.com/auth/monitoring",
    ]
  }
}

# create a compute node group resource
resource "google_compute_node_group" "node" {
  name = "node-group"
  description = "Node group for Kubernetes cluster"
  node_template = google_compute_instance_template.node.self_link
  node_count = var.node_count
  zone = var.zone
}

