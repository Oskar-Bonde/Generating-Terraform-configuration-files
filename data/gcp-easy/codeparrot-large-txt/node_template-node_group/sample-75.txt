terraform {
  required_providers {
    google = {
      source = "hashicorp/google"
    }
  }
}

# google provider block
provider "google" {
}

# create a node template
resource "google_compute_instance_template" "node_template" {
  name_prefix  = "node-template-"
  machine_type = "f1-micro"
  can_ip_forward = true

  disk {
    source_image = "debian-cloud/debian-9"
  }

  network_interface {
    network = "default"    
    access_config {
    }
  }

  metadata {
    sshKeys = "ubuntu:${file("~/.ssh/${var.key_name}.pub")}"
  }

  service_account {
    scopes = ["https://www.googleapis.com/auth/compute.readonly"]
  }
}

# create a compute node group resource
resource "google_compute_instance_group_manager" "node_group_manager" {
  name = "my-group-manager"
  zone = "us-central1-a"

  version {
    instance_template = google_compute_instance_template.node_template.id
  }

  target_size  = 2
  named_port {
    name = "http"
    port = "80"
  }

  named_port {
    name = "https"
    port = "443"
  }

  #  network_interface {
  #    network = "default"
  #    access_config {
  #      }
  #  }

  #  metadata {
  #    sshKeys = "ubuntu:${file("~/.ssh/${var.key_name}.pub")}"
  #  }

  #  service_account {
  #    scopes = ["https://www.googleapis.com/auth/compute.readonly"]
  #  }
}

