terraform {
  required_providers {
    google = {
      source = "hashicorp/google"
    }
  }
}

# google provider block
provider "google" {
}

# create a node template
resource "google_compute_node_template" "node_template" {
  name = "my-node-template"
  region = "us-central1"

  node_type = "n1-standard-1"

  disk {
    source_image = "debian-cloud/debian-9"
    auto_delete  = true
    boot         = true
  }

  network_interface {
    network = "default"    
    access_config {
    }
  }

  metadata {
    sshKeys = "ubuntu:${file("~/.ssh/${var.key_name}.pub")}"
  }

  service_account {
    scopes = ["https://www.googleapis.com/auth/compute.readonly"]
  }
}

# create a compute node group resource
resource "google_compute_node_group_manager" "node_group_manager" {
  name = "my-node-group-manager"
  zone = "us-central1-a"

  node_template = google_compute_node_template.node_template.id
  base_instance_name = "vm"

  base_instance_name = "vm-nodes"

  version {
    instance_template = google_compute_instance.vm_instance.id
  }

  target_size  = 2

  auto_healing_policies {
    health_check      = google_compute_health_check.health_check.id
    initial_delay_sec = 30
  }

  auto_healing_policies {
    health_check      = google_compute_health_check.health_check.id
    initial_delay_sec = 30
  }

  depends_on = [google_compute_instance.vm_instance]
}

