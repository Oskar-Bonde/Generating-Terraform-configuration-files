terraform {
  required_providers {
    google = {
      source = "hashicorp/google"
    }
  }
}

# google provider block
provider "google" {
}

# create a node template
resource "google_compute_instance_template" "node_template" {
  name_prefix  = "node-template-"
  machine_type = "n1-standard-1"

  disk {
    source_image = "debian-cloud/debian-9"
  }

  network_interface {
    network = "default"    
    access_config {
    }
  }

  # install nginx and serve a simple web page
  metadata = {
    startup-script = <<-EOF1
      #! /bin/bash
      set -euo pipefail

      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      apt-get install -y nginx-light jq

      NAME=node-template
      IP=${google_compute_address.gcp_sap_hana_intip_primary_ip.address}

      MACADDR=${google_compute_address.gcp_sap_hana_intip_primary_ip.address}

      CASSANDRA_NODE_COUNT=${var.n1_node_count}

      # install nginx
      nginx -f -p 8080 &
      EOF

      # install a simple web page
      nginx -A $LOGFILE_PATH_HTTP
      EOF

      # install a simple web page
      nginx -A $LOGFILE_PATH_NESTED
      EOF
    EOF
  }

  # install a simple web page
  metadata = {
    startup-script = <<-EOF1
      #! /bin/bash
      set -euo pipefail

      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      apt-get install -y nginx-light jq

      NAME=node-template
      IP=${google_compute_address.gcp_sap_hana_intip_primary_ip.address}

      MACADDR=${google_compute_address.gcp_sap_hana_intip_primary_ip.address}

      CASSANDRA_NODE_COUNT=${var.n1_node_count}

      # install nginx
      nginx -A $LOGFILE_PATH_HTTP
      EOF

      # install a simple web page
      nginx -A $LOGFILE_PATH_NESTED
      EOF
    EOF
  }

  service_account {
    scopes = ["https://www.googleapis.com/auth/compute.readonly"]
  }
}

