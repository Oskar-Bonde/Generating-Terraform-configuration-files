terraform {
  required_providers {
    google = {
      source = "hashicorp/google"
    }
  }
}

# google provider block
provider "google-beta" {
  {{if. google_compute_instance.vm_instance)
  {{if. google_compute_instance.vm_instance_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_proxy_http_
}

# create compute network

resource "google_compute_network" "default" {
  name                    = "my-network-${random_suffix}"
  auto
}

# create compute subnetwork
}

# make a compute address resource
}

