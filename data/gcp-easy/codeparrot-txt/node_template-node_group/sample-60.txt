terraform {
  required_providers {
    google = {
      source = "hashicorp/google"
    }
  }
}

# google provider block
provider "google" {
}

# create a node template
resource "google_compute_instance_template" "node_template" {
  name_prefix  = "node-template-"
  machine_type = "f1-micro"

  disk {
    source_image = "debian-cloud/debian-9"
    auto_delete  = true
    boot         = true
  }

  network_interface {
    network = "default"    
    access_config {
    }
  }

  metadata = {
    startup-script = <<EOF
    #!/bin/bash
    set -euo pipefail
    export DEBIAN_FRONTEND=noninteractive
    apt-get update
    apt-get install -y nginx-light jq
    NAME=node-template
    IP=$(curl -s http://169.254.169.254/latest/meta-data/hostname)
    cat <<EOF > /var/www/html/index.html
    <pre>
    Name: $NAME
    IP: $IP
    Port: $PORT
    Data: $DATA
    </pre>
    EOF
    EOF
    # install nginx
    nginx -s /etc/nginx/sites-available/default.conf
    EOF
  }

  service_account {
    scopes = ["https://www.googleapis.com/auth/compute.readonly"]
  }
}

# create a compute node group resource
resource "google_compute_instance_group_manager" "node_group_manager" {
  name = "my-group-manager-${random_suffix}"
  zone = "us-central1-a"
  base_instance_name = "vm-test-1"
  instance_template = "${google_compute_instance_template.node_template.self_link}"
  target_size = 1
}

