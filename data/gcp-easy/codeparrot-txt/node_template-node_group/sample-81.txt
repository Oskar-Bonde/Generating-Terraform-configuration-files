terraform {
  required_providers {
    google = {
      source = "hashicorp/google"
    }
  }
}

# google provider block
provider "google" {
}

# create a node template
resource "google_compute_instance_template" "node_template" {
  name_prefix  = "node-template-"
  machine_type = "n1-standard-1"

  disk {
    source_image = "debian-cloud/debian-9"
    auto_delete  = true
    boot         = true
  }

  network_interface {
    network = "default"    
    access_config {
    }
  }
}

# create a compute node group resource
resource "google_compute_instance_group_manager" "node_group_manager" {
  name = "my-node-group-manager-%{random_suffix}"
  zone = "us-central1-a"

  version {
    instance_template = google_compute_instance_template.node_template.id
  }

  target_pools       = ["${google_compute_target_pool.node_pool.id}"]
  base_instance_name = "node-group-target-pool"

  target_size  = 2
  named_port {
    name = "http"
    port = "80"
  }

  named_port {
    name = "https"
    port = "443"
  }

  version {
    instance_template = google_compute_instance_template.node_template.id
  }

  auto_healing_policies {
    health_check      = google_compute_health_check.node_group_manager.self_link
    initial_delay_sec = 30
  }

  depends_on = [
    # The project's services must be set up before the
    # instance is enabled as the compute API will not
    # be enabled and cause the setup to fail.
    google_project_service.compute_api,
  ]
}

