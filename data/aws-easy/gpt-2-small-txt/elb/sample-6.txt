terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
    }
  }
}

# Provider block with an EC2 instance
resource "aws_instance" "ec2demo2" {
  ami           = "ami-0ff8a91507f77f867" 
  instance_type = "t2.micro"
}

# create AWS ELB resource
resource "aws_elb" "elb" {
  name                                  = "elb-${var.environment}-elb"
  security_groups                      = ["${aws_security_group.elb.id}"]
  subnets                               = ["${aws_subnet.public.*.id}"]
  internal                               = true
  cross_zone_load_balancing           = true
  connection_draining                     = true
  connection_draining_timeout               = 30
  connection_draining_timeout_period           = 300

  listener {
    instance_port      = 80
    instance_protocol  = "http"
    lb_port            = 80
    lb_protocol        = "http"
  }

  health_check {
    healthy_threshold   = 2
    unhealthy_threshold = 2
    timeout             = 3
    target              = "HTTP:80/"
    interval            = 30
  }

  tags = "${merge(map(
      "Name", "${var.environment}-elb",
      "kubernetes.io/cluster/${var.environment}", "owned",
      "tectonicClusterID", "${var.cluster_id}"
    ), var.extra_tags)}"
}

