terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
    }
  }
}

# Provider Block AWS
provider "aws" {
  region = "us-east-1"
}

# Create variable 
variable "aws_region" {
  default = "us-east-1"
}

# variable block
variable "instance_type" {
  default = "t2.micro"
}

# make variable
variable "ami_id" {
  default = "ami-0f65671a86f061fcd"
}

# create variable block
variable "key_name" {
  default = "terraform-key"
}

# Create Security Group
resource "aws_security_group" "terraform_sg" {
  name        = "terraform_sg"
  description = "Allow SSH and HTTP traffic"
  vpc_id      = "vpc-0b9f9b6f6c7c6d9f3"

  ingress {
    description = "SSH"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    description = "HTTP"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "terraform_sg"
  }
}

# Create Security Group
resource "aws_security_group" "terraform_sg_db" {
  name        = "terraform_sg_db"
  description = "Allow SSH and HTTP traffic"
  vpc_id      = "vpc-0b9f9b6f6c7c6d9f3"

  ingress {
    description = "SSH"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    description = "HTTP"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "terraform_sg_db"
  }
}

# Create EC2 Instance
resource "aws_instance" "terraform_instance" {
  ami           = var.ami_id
  instance_type = var.instance_type
  key_name      = var.key_name
  vpc_security_group_ids = [aws_security_group.terraform_sg.id]
  subnet_id     = "subnet-0c2d9a9a0d9c7e3b3"

  tags = {
    Name = "terraform_instance"
  }
}

