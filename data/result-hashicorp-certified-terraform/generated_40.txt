# Terraform Block with AWS
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
    }
  }
}

# Provider Block with region var.aws_region and default region
provider "aws" {
  region = var.aws_region
}

# Create Security Group called vpc-ssh. It allows port 22 ingress and all ports and ip egress
resource "aws_security_group" "vpc-ssh" {
  name        = "vpc-ssh"
  description = "Allow SSH access"
  vpc_id      = aws_vpc.vpc.id

  ingress {
    from_port       = 22
    to_port         = 22
    protocol        = "tcp"
    cidr_blocks     = ["0.0.0.0/0"]
  }

  egress {
    from_port       = 0
    to_port         = 0
    protocol        = "-1"
    cidr_blocks     = ["0.0.0.0/0"]
  }
}

# Create Security Group called vpc-web. It allows port 80 and 443 ingress and all ports and ip egress
resource "aws_security_group" "vpc-web" {
  name        = "vpc-web"
  description = "Allow HTTP/HTTPS access"
  vpc_id      = aws_vpc.vpc.id

  ingress {
    from_port       = 80
    to_port         = 80
    protocol        = "tcp"
    cidr_blocks     = ["0.0.0.0/0"]
  }

  ingress {
    from_port       = 443
    to_port         = 443
    protocol        = "tcp"
    cidr_blocks     = ["0.0.0.0/0"]
  }

  egress {
    from_port       = 0
    to_port         = 0
    protocol        = "-1"
    cidr_blocks     = ["0.0.0.0/0"]
  }
}

# Create an AWS instance. Use latest amazon linux ami, instance type from varaible and security groups
resource "aws_instance" "web" {
  ami           = data.aws_ami.amzn-ami-minimal-hvm-ebs.id
  instance_type = var.instance_type
  security_groups = [aws_security_group.vpc-web.name]
  subnet_id     = aws_subnet.public.id
}

